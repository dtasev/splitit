# Simple workflow for deploying static content to GitHub Pages
name: Build

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]


# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "build"
  cancel-in-progress: true

jobs:
  build-and-push:
    environment:
      name: cloud-vm-prod
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v4
      # - name: Build the backend
      #   run: cd backend && bash build.sh --push
      # - name: Build the nginx proxy
      #   run: cd nginx && bash build.sh --push
      # - name: Build the react container
      #   run: bash build.sh --push
      # - name: Install SSH key
      #   uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.SSH_KEY }}
      #     name: id_rsa_gcloud # optional
      #     known_hosts: ${{ secrets.KNOWN_HOSTS }}
      #     if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      - name: Check SSH
        run: ssh -i /home/runner/.ssh/id_rsa_gcloud dimitar@35.196.180.252 cd splitit && git pull && bash build-all-and-compose.sh